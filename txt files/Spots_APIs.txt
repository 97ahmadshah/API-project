#####################################################################################
## GET ALL SPOTS
Returns all the spots.

Require Authentication: false

Request

Method: GET
URL: /spots
Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "Spots": [
    {
      "id": 1,
      "ownerId": 1,
      "address": "123 Disney Lane",
      "city": "San Francisco",
      "state": "California",
      "country": "United States of America",
      "lat": 37.7645358,
      "lng": -122.4730327,
      "name": "App Academy",
      "description": "Place where web developers are created",
      "price": 123,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36",
      "avgRating": 4.5,
      "previewImage": "image url"
    }
  ]
}

#####################################################################################

## GET ALL SPOTS OWNED BY THE CURRENT USER
Returns all the spots owned (created) by the current user.
Require Authentication: true

Request
Method: GET
URL: /user/spots

Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "Spots": [
    {
      "id": 1,
      "ownerId": 1,
      "address": "123 Disney Lane",
      "city": "San Francisco",
      "state": "California",
      "country": "United States of America",
      "lat": 37.7645358,
      "lng": -122.4730327,
      "name": "App Academy",
      "description": "Place where web developers are created",
      "price": 123,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36",
      "avgRating": 4.5,
      "previewImage": "image url"
    }
  ]
}

#####################################################################################

## GET DETAILS OF A SPOT FROM AN ID

Returns the details of a spot specified by its id.
Require Authentication: false

Request
Method: GET
URL: /spots/:id
Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "ownerId": 1,
  "address": "123 Disney Lane",
  "city": "San Francisco",
  "state": "California",
  "country": "United States of America",
  "lat": 37.7645358,
  "lng": -122.4730327,
  "name": "App Academy",
  "description": "Place where web developers are created",
  "price": 123,
  "createdAt": "2021-11-19 20:39:36",
  "updatedAt": "2021-11-19 20:39:36" ,
  "numReviews": 5,
  "avgStarRating": 4.5,
  "SpotImages": [
    {
      "id": 1,
      "url": "image url",
      "preview": true
    },
    {
      "id": 2,
      "url": "image url",
      "preview": false
    }
  ],
  "Owner": {
    "id": 1,
    "firstName": "John",
    "lastName": "Smith"
  }
}

Error response: Couldn't find a Spot with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Spot couldn't be found"
}

#####################################################################################

## CREATE A SPOT
Create a Spot
Creates and returns a new spot.
Require Authentication: true

Request
Method: POST
URL: /spots

Headers:
Content-Type: application/json

Body:
{
  "address": "123 Disney Lane",
  "city": "San Francisco",
  "state": "California",
  "country": "United States of America",
  "lat": 37.7645358,
  "lng": -122.4730327,
  "name": "App Academy",
  "description": "Place where web developers are created",
  "price": 123
}

Successful Response
Status Code: 201

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "ownerId": 1,
  "address": "123 Disney Lane",
  "city": "San Francisco",
  "state": "California",
  "country": "United States of America",
  "lat": 37.7645358,
  "lng": -122.4730327,
  "name": "App Academy",
  "description": "Place where web developers are created",
  "price": 123,
  "createdAt": "2021-11-19 20:39:36",
  "updatedAt": "2021-11-19 20:39:36"
}

Error Response: Body validation error
Status Code: 400

Headers:
Content-Type: application/json

Body:
{
  "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
  "errors": {
    "address": "Street address is required",
    "city": "City is required",
    "state": "State is required",
    "country": "Country is required",
    "lat": "Latitude is not valid",
    "lng": "Longitude is not valid",
    "name": "Name must be less than 50 characters",
    "description": "Description is required",
    "price": "Price per day is required"
  }
}

#####################################################################################
## ADD AN IMAGE TO A SPOT BASED ON SPOT'S :ID
Create and return a new image for a spot specified by id.
Require Authentication: true
Require proper authorization: Spot must belong to the current user

Request
Method: POST
URL: /spots/:id/images

Headers:
Content-Type: application/json

Body:
{
  "url": "image url",
  "preview": true
}

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "url": "image url",
  "preview": true
}

Error response: Couldn't find a Spot with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Spot couldn't be found"
}

#####################################################################################
## EDIT A SPOT
Edit a Spot
Updates and returns an existing spot.
Require Authentication: true
Require proper authorization: Spot must belong to the current user

Request
Method: PUT
URL: /spots/:id

Headers:
Content-Type: application/json

Body:
{
  "address": "123 Disney Lane",
  "city": "San Francisco",
  "state": "California",
  "country": "United States of America",
  "lat": 37.7645358,
  "lng": -122.4730327,
  "name": "App Academy",
  "description": "Place where web developers are created",
  "price": 123
}

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "ownerId": 1,
  "address": "123 Disney Lane",
  "city": "San Francisco",
  "state": "California",
  "country": "United States of America",
  "lat": 37.7645358,
  "lng": -122.4730327,
  "name": "App Academy",
  "description": "Place where web developers are created",
  "price": 123,
  "createdAt": "2021-11-19 20:39:36",
  "updatedAt": "2021-11-20 10:06:40"
}

Error Response: Body validation error
Status Code: 400

Headers:
Content-Type: application/json

Body:
{
  "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
  "errors": {
    "address": "Street address is required",
    "city": "City is required",
    "state": "State is required",
    "country": "Country is required",
    "lat": "Latitude is not valid",
    "lng": "Longitude is not valid",
    "name": "Name must be less than 50 characters",
    "description": "Description is required",
    "price": "Price per day is required"
  }
}

Error response: Couldn't find a Spot with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Spot couldn't be found"
}

#####################################################################################
## Delete a Spot

Deletes an existing spot.

* Require Authentication: true
* Require proper authorization: Spot must belong to the current user
* Request
  * Method: ?
  * URL: ?
  * Body: none

* Successful Response
  * Status Code: 200
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Successfully deleted",
      "statusCode": 200
    }
    ```

* Error response: Couldn't find a Spot with the specified id
  * Status Code: 404
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Spot couldn't be found",
      "statusCode": 404
    }
    ```

#####################################################################################
