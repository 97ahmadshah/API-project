#####################################################################################
## GET ALL REVIEWS OF THE CURRENT USER
Returns all the reviews written by the current user.
Require Authentication: true

Request
Method: GET
URL: /current
Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "Reviews": [
    {
      "id": 1,
      "userId": 1,
      "spotId": 1,
      "review": "This was an awesome spot!",
      "stars": 5,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36" ,
      "User": {
        "id": 1,
        "firstName": "John",
        "lastName": "Smith"
      },
      "Spot": {
        "id": 1,
        "ownerId": 1,
        "address": "123 Disney Lane",
        "city": "San Francisco",
        "state": "California",
        "country": "United States of America",
        "lat": 37.7645358,
        "lng": -122.4730327,
        "name": "App Academy",
        "price": 123,
        "previewImage": "image url"
      },
      "ReviewImages": [
        {
          "id": 1,
          "url": "image url"
        }
      ]
    }
  ]
}

#####################################################################################
## GET ALL REVIEWS BY A SPOT'S ID
Returns all the reviews that belong to a spot specified by id.
Require Authentication: false

Request
Method: GET
URL: /spots/:id/reviews
Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "Reviews": [
    {
      "id": 1,
      "userId": 1,
      "spotId": 1,
      "review": "This was an awesome spot!",
      "stars": 5,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36" ,
      "User": {
        "id": 1,
        "firstName": "John",
        "lastName": "Smith"
      },
      "ReviewImages": [
        {
          "id": 1,
          "url": "image url"
        }
      ],
    }
  ]
}

Error response: Couldn't find a Spot with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Spot couldn't be found"
}

#####################################################################################
## CREATE A REVIEW FOR A SPOT BASED ON THE SPOT'S ID
Create and return a new review for a spot specified by id.
Require Authentication: true

Request
Method: POST
URL: /spots/:id/reviews

Headers:
Content-Type: application/json

Body:
{
  "review": "This was an awesome spot!",
  "stars": 5,
}

Successful Response
Status Code: 201

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "userId": 1,
  "spotId": 1,
  "review": "This was an awesome spot!",
  "stars": 5,
  "createdAt": "2021-11-19 20:39:36",
  "updatedAt": "2021-11-19 20:39:36"
}

Error Response: Body validation errors
Status Code: 400

Headers:
Content-Type: application/json

Body:
{
  "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
  "errors": {
    "review": "Review text is required",
    "stars": "Stars must be an integer from 1 to 5",
  }
}

Error response: Couldn't find a Spot with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Spot couldn't be found"
}

Error response: Review from the current user already exists for the Spot
Status Code: 500

Headers:
Content-Type: application/json

Body:
{
  "message": "User already has a review for this spot"
}

#####################################################################################
## ADD AN IMAGE TO A REVIEW BASED ON THE REVIEW'S ID
Create and return a new image for a review specified by id.
Require Authentication: true
Require proper authorization: Review must belong to the current user

Request
Method: POST
URL: /reviews/:id/images

Headers:
Content-Type: application/json

Body:
{
  "url": "image url"
}

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "url": "image url"
}

Error response: Couldn't find a Review with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Review couldn't be found"
}

Error response: Cannot add any more images because there is a maximum of 10 images per resource
Status Code: 403

Headers:
Content-Type: application/json

Body:
{
  "message": "Maximum number of images for this resource was reached"
}

#####################################################################################
## EDIT A REVIEW
Update and return an existing review.
Require Authentication: true
Require proper authorization: Review must belong to the current user

Request
Method: PUT
URL: /reviews/:id

Headers:
Content-Type: application/json

Body:
{
  "review": "This was an awesome spot!",
  "stars": 5,
}

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "id": 1,
  "userId": 1,
  "spotId": 1,
  "review": "This was an awesome spot!",
  "stars": 5,
  "createdAt": "2021-11-19 20:39:36",
  "updatedAt": "2021-11-20 10:06:40"
}

Error Response: Body validation errors
Status Code: 400

Headers:
Content-Type: application/json

Body:
{
  "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
  "errors": {
    "review": "Review text is required",
    "stars": "Stars must be an integer from 1 to 5",
  }
}

Error response: Couldn't find a Review with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Review couldn't be found"
}

#####################################################################################
## DELETE A REVIEW
Delete an existing review.
Require Authentication: true
Require proper authorization: Review must belong to the current user

Request
Method: DELETE
URL: /reviews/:id
Body: none

Successful Response
Status Code: 200

Headers:
Content-Type: application/json

Body:
{
  "message": "Successfully deleted"
}

Error response: Couldn't find a Review with the specified id
Status Code: 404

Headers:
Content-Type: application/json

Body:
{
  "message": "Review couldn't be found"
}

#####################################################################################
